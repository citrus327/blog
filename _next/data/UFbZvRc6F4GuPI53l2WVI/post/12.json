{"pageProps":{"html":"<h1 dir=\"auto\">React学习与探索之路 (一)</h1>\n<blockquote>\n<p dir=\"auto\">近期后端 REST API 基本重构完成，准备基于此，会将原有 Dashboard 使用 React.js 重写。<br>\n在此过程中会陆续对使用到的技术进行归纳和总结</p>\n</blockquote>\n<h2 dir=\"auto\">项目搭建</h2>\n<ol dir=\"auto\">\n<li>采用 Create-React-App 脚手架搭建项目</li>\n<li>使用传统 JavaScript 而非 TypeScript，因为了解不多，防止采坑，先使用JavaScript，会考虑后期重构</li>\n<li>采用 Material UI 作为基础样式库/组件库。选型原因：\n<ul dir=\"auto\">\n<li>作为基础 Dashboard 项目, 更期望采用 Material Design 来完成，因为足够简单清爽</li>\n<li>Github star数量多，老牌 React.js 维护性和口碑有保证</li>\n<li>文档足够清晰，Google Material Design Icon分包，styles 分包</li>\n<li>样式拓展有保证</li>\n</ul>\n</li>\n</ol>\n<h2 dir=\"auto\">初次尝试</h2>\n<p dir=\"auto\">想要关注的问题有</p>\n<ol dir=\"auto\">\n<li>font-family和字体文件如何处理</li>\n<li>如何自定义theme，如何书写css样式。目前考虑styled-component</li>\n<li>项目结构</li>\n<li>底层 ISDK 封装是否要另起一个 repo 做，因为考虑会有博客端对外开放，很多 API 是共用的</li>\n<li>不使用hooks开发，体验 React.js 在有 hook 之前的开发体验，能够实在的了解痛点。</li>\n<li>状态管理选型，目前了解到的有：Redux, dva, saga 等</li>\n<li>路由控制逻辑，中心化/去中心化？ React-Router 新版的最佳实践。</li>\n</ol>\n<h2 dir=\"auto\">记录历程</h2>\n<ol dir=\"auto\">\n<li>第一天:\n<ul dir=\"auto\">\n<li>项目搭建完成，只引入了 Material UI，尝试 Styled-Component</li>\n<li>字体选择：Roboto, 使用 Google Web Font，采用 CDN 引入</li>\n<li>icon 使用 自带的 Material Icons 包</li>\n<li>了解 Container 组件。尝试一个基本的 layout</li>\n<li>使用 Styled-Component，尝试场景有：\n<ul dir=\"auto\">\n<li>基本 CSS 定义</li>\n<li>父组件覆写子组件样式</li>\n<li>样式传参</li>\n</ul>\n</li>\n<li>今日记录：<a href=\"./1.styled-component\">Styled Component in React.js</a></li>\n</ul>\n</li>\n<li>第二天：\n<ul dir=\"auto\">\n<li>基本需求确定，这里也列一下计划\n<ol dir=\"auto\">\n<li>基本Layout设计与实现</li>\n<li>路由和菜单设计</li>\n<li>准备玩的一些想法，例如：Dark Mode</li>\n</ol>\n</li>\n<li>添加一些第三方依赖，引入\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">react-app-rewired</code></li>\n<li><code class=\"notranslate\">customize-cra</code></li>\n<li><code class=\"notranslate\">react-router-dom</code></li>\n</ul>\n</li>\n<li>今日记录：<a href=\"./2.dark-mode\">使用ThemeProvider实现Dark Mode</a></li>\n</ul>\n</li>\n</ol>"},"__N_SSG":true}