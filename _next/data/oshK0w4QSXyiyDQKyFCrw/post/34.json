{"pageProps":{"html":"<h2 dir=\"auto\">Anders Hejlsberg on Modern Compiler Construction</h2>\n<p dir=\"auto\">Full Video: <a href=\"https://www.youtube.com/watch?v=wSdV1M7n4gQ&amp;ab_channel=Googol\" rel=\"nofollow\">https://www.youtube.com/watch?v=wSdV1M7n4gQ&amp;ab_channel=Googol</a></p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Tranditional Compiler架构</p>\n<ul dir=\"auto\">\n<li>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/17166940/168945518-679f98f7-36c3-4332-ad20-a0cf811e1633.png\"><img width=\"932\" alt=\"image\" src=\"https://user-images.githubusercontent.com/17166940/168945518-679f98f7-36c3-4332-ad20-a0cf811e1633.png\" style=\"max-width: 100%;\"></a>\n</li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\">Compiler运行的前提是确保code是正确的，但是在用户使用时（IDE场景），其实code并没有写完，如何保证Compiler的报错信息可靠？</p>\n<ul dir=\"auto\">\n<li>Q: 是否需要一个Compiler when you press the build button和一个Compiler that read code and throw semantic errors?</li>\n<li>A: 初期C#在ide内和Compiler确实做了2遍，但是肯定是没办法一直把同一件事情做2遍的。例如新出一个ide，需要这个ide去实现这个compiler，这是不可接受的。解法：build the compiler as API，不仅compiler是个compiler，同时可以被ide消费。（command line compiler === IDE compiler)</li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\">Compiler如何与市面上那么多的IDE对接？</p>\n<ul dir=\"auto\">\n<li>Compiler如果是用JavaScript实现的，那么暴露的API也是JavaScript的，也可能是别的语言。如果与IDE不一致，那就面临无法接入的问题，所以提供Language Server作为一个独立的Process，与IDE本身分开。IDE只需实现JSON Protocol，来与Server通讯，例如：我现在在index.ts文件的第52行的第6列，现在我输入了一个dot，我需要展示什么信息。Server会回复给你对应的数据，这样可以做到与不同的IDE对接。</li>\n</ul>\n</li>\n</ul>"},"__N_SSG":true}