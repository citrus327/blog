{"pageProps":{"html":"<blockquote>\n<p dir=\"auto\">背景: 使用<code class=\"notranslate\">react-typescript-docgen</code>直接去parse我写的一个组件无效。</p>\n</blockquote>\n<p dir=\"auto\">直接上代码</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import React from 'react'\n\nexport interface ButtonProps {\n  children?: React.ReactNode\n  /** prop1 description */\n  onClick: () =&gt; void\n}\n\nconst Button: React.FunctionComponent&lt;ButtonProps&gt; = (props: ButtonProps) =&gt; {\n  return &lt;button&gt;123&lt;/button&gt;\n}\n\nexport default Button\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-v\">React</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-s1\">interface</span> <span class=\"pl-v\">ButtonProps</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s1\">children</span>?<span class=\"pl-s1\"></span>: <span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">ReactNode</span>\n  <span class=\"pl-c\">/** prop1 description */</span>\n  onClick: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-k\">void</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Button</span>: <span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">FunctionComponent</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-v\">ButtonProps</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span>: <span class=\"pl-v\">ButtonProps</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">button</span><span class=\"pl-c1\">&gt;</span>123<span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">button</span><span class=\"pl-c1\">&gt;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">Button</span></pre></div>\n<p dir=\"auto\">parser代码</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const docgen = require(&quot;react-docgen-typescript&quot;);\n\nconst options = {\n  savePropValueAsString: true,\n};\n// Parse a file for docgen info\nconst result = docgen.parse(&quot;./test/Button.tsx&quot;, options);\n\nconsole.log(result);\n\n\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">docgen</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"react-docgen-typescript\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">options</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">savePropValueAsString</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Parse a file for docgen info</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">docgen</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">parse</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"./test/Button.tsx\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n</pre></div>\n<p dir=\"auto\">从源码中找到了getComponentInfo的代码</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// node_modules/react-docgen-typescript/lib/parser.js\nParser.prototype.getComponentInfo = function (exp, source, componentNameResolver, customComponentTypes) {\n  // ...\n  var defaultComponentTypes = [\n    '__function',\n    'StatelessComponent',\n    'Stateless',\n    'StyledComponentClass',\n    'StyledComponent',\n    'FunctionComponent',\n    'ForwardRefExoticComponent'\n  ];\n  var supportedComponentTypes = __spreadArray(__spreadArray([], defaultComponentTypes), customComponentTypes);\n  // ...\n}\"><pre><span class=\"pl-c\">// node_modules/react-docgen-typescript/lib/parser.js</span>\n<span class=\"pl-v\">Parser</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getComponentInfo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">exp</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">source</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">componentNameResolver</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">customComponentTypes</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// ...</span>\n  <span class=\"pl-k\">var</span> <span class=\"pl-s1\">defaultComponentTypes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>\n    <span class=\"pl-s\">'__function'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'StatelessComponent'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'Stateless'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'StyledComponentClass'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'StyledComponent'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'FunctionComponent'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'ForwardRefExoticComponent'</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">var</span> <span class=\"pl-s1\">supportedComponentTypes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">__spreadArray</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">__spreadArray</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">defaultComponentTypes</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">customComponentTypes</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-c\">// ...</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">发现这里默认的<code class=\"notranslate\">componentTypes</code>只有 <code class=\"notranslate\">FunctionComponent</code> ，没有 <code class=\"notranslate\">React.FunctionComponent </code>, 于是将代码改成了<code class=\"notranslate\">import { FunctionComponent } from 'react'</code> 果然可以了！</p>\n<p dir=\"auto\">我第一反应是这作者有点啥，为啥会做这种约定，我更倾向写<code class=\"notranslate\">React.FunctionComponent</code>的，虽然累赘但是表意很清晰。</p>\n<p dir=\"auto\">不过紧跟着发现是可以通过customComponentTypes这个文档上压根没有的属性进行额外拓展，于是在使用options去拓展了customComponentTypes这个设置。</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const docgen = require(&quot;react-docgen-typescript&quot;);\n\nconst options = {\n  customComponentTypes: [&quot;React.FunctionComponent&quot;],\n};\n\n// Parse a file for docgen info\nconst result = docgen.parse(&quot;./test/Button.tsx&quot;, options);\n\nconsole.log(result);\n\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">docgen</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"react-docgen-typescript\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">options</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">customComponentTypes</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"React.FunctionComponent\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Parse a file for docgen info</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">docgen</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">parse</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"./test/Button.tsx\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">通过debug发现，这个<code class=\"notranslate\">customComponentTypes</code>确实被成功使用了，但是问题还是没有解决。</p>\n<p dir=\"auto\">我又去重新阅读了官方的文档，发现他们在ts中使用<code class=\"notranslate\">react</code>，都是<code class=\"notranslate\">import * as React from 'react'</code></p>\n<p dir=\"auto\">我就将我的demo改成了</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import * as React from 'react' // 这行\n\nexport interface ButtonProps {\n  children?: React.ReactNode\n  /** prop1 description */\n  onClick: () =&gt; void\n}\n\nconst Button: React.FunctionComponent&lt;ButtonProps&gt; = (props: ButtonProps) =&gt; {\n  return &lt;button&gt;123&lt;/button&gt;\n}\n\nexport default Button\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span> <span class=\"pl-k\">as</span> <span class=\"pl-v\">React</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'react'</span> <span class=\"pl-c\">// 这行</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-s1\">interface</span> <span class=\"pl-v\">ButtonProps</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s1\">children</span>?<span class=\"pl-s1\"></span>: <span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">ReactNode</span>\n  <span class=\"pl-c\">/** prop1 description */</span>\n  onClick: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-k\">void</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Button</span>: <span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">FunctionComponent</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-v\">ButtonProps</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">props</span>: <span class=\"pl-v\">ButtonProps</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">button</span><span class=\"pl-c1\">&gt;</span>123<span class=\"pl-c1\">&lt;</span><span class=\"pl-c1\">/</span><span class=\"pl-ent\">button</span><span class=\"pl-c1\">&gt;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">Button</span></pre></div>\n<p dir=\"auto\">去掉了<code class=\"notranslate\">customComponentTypes</code>设置，重新跑一遍，组件被成功parse了。</p>\n<p dir=\"auto\">这其实问题就转变成了<code class=\"notranslate\">import React from 'react'</code> 和 <code class=\"notranslate\">import * as React from 'react'</code>的问题。</p>\n<p dir=\"auto\">想想其实我的运行环境是node环境，也就是cjs.</p>\n<p dir=\"auto\">React本身编译后的cjs包，就是没有default属性的，所以在ts环境下需要加入<code class=\"notranslate\">{esModuleInterop: true}</code>。</p>\n<p dir=\"auto\">通过增加esModuleInterop为true，问题成功得到解决。</p>\n<p dir=\"auto\">参考：</p>\n<ul dir=\"auto\">\n<li><a href=\"https://stackoverflow.com/questions/54585763/what-is-the-difference-between-import-as-react-from-react-vs-import-react-fr\" rel=\"nofollow\">https://stackoverflow.com/questions/54585763/what-is-the-difference-between-import-as-react-from-react-vs-import-react-fr</a></li>\n<li><a href=\"https://github.com/styleguidist/react-docgen-typescript\">https://github.com/styleguidist/react-docgen-typescript</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/148081795\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/148081795</a></li>\n</ul>"},"__N_SSG":true}